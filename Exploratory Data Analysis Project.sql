 -- Explore All Objects in the Database 
 SELECT * FROM INFORMATION_SCHEMA.TABLES

 -- Explore All COLUMNS in the Database  
 SELECT * FROM INFORMATION_SCHEMA.COLUMNS

 -- Explore All Countries our customers come from.
 SELECT DISTINCT country from [gold.dim_customers]

 -- Explore All Categories "The major Division"
 SELECT DISTINCT category, subcategory, product_name from [gold.dim_products]
 ORDER BY 1,2,3

 -- Find the date of the first and last order
 -- How many years of sales are available
 SELECT 
 MIN(order_date) AS first_order_date,
 MAX(order_date) AS last_order_date,
 DATEDIFF(YEAR, MIN(order_date), MAX(order_date)) AS order_range_years
 from [gold.fact_sales]

 -- Find the oldest and youngest customer
 SELECT
 MIN(birthdate) AS oldest_birthdate,
 DATEDIFF(YEAR, MIN(birthdate), GETDATE()) AS oldest_age,
 MAX(birthdate) AS youngest_birthdate,
 DATEDIFF(YEAR, MAX(birthdate), GETDATE()) AS youngest_age
 FROM [gold.dim_customers]

 -- Find the total sales
 SELECT SUM(sales_amount) AS total_sales FROM [gold.fact_sales]

 --Find how many items are sold
 SELECT SUM(quantity) AS total_quantity FROM [gold.fact_sales]

 -- Find the average selling price 
 SELECT AVG(price) AS avg_price from [gold.fact_sales]

 -- Find the total number of orders
   SELECT COUNT(order_number) AS total_orders from [gold.fact_sales]

 -- Find the DISTINCT total number of orders
   SELECT COUNT(DISTINCT order_number) AS total_orders from [gold.fact_sales]

 -- Find the total number of products
   SELECT COUNT(product_name) AS total_products from [gold.dim_products]

 -- Find the DISTINCT total number of products
   SELECT COUNT(DISTINCT product_name) AS total_products from [gold.dim_products]

 -- Find total number of customers
 SELECT COUNT(customer_key) AS total_customers FROM [gold.dim_customers]

 -- Find the total number of customers that has placed an order
  SELECT COUNT(DISTINCT customer_key) AS total_customers from [gold.fact_sales]


  -- Generate a Report that shows all key metrices of the business
   
   SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM [gold.fact_sales]
   UNION ALL
   SELECT 'Total Quantity', SUM(quantity) FROM [gold.fact_sales]
   UNION ALL
   SELECT 'Average Price', AVG(price) FROM [gold.fact_sales]
   UNION ALL 
   SELECT 'Total no. orders', COUNT(DISTINCT order_number) FROM [gold.fact_sales]
   UNION ALL
   SELECT 'Total no. products', COUNT(product_name) FROM [gold.dim_products]
   UNION ALL
   SELECT 'Total no. customers', COUNT(customer_key) FROM [gold.dim_customers]


   -- Find total customers by countries
   SELECT 
   country,
   count(customer_key) as total_customers
   from [gold.dim_customers]
   group by country
   order by total_customers desc

   -- Find total customers by gender
   SELECT 
   gender,
   count(customer_key) as total_customers
   from [gold.dim_customers]
   group by gender
   order by total_customers desc

   -- Find total products by category
   SELECT
   category,
   COUNT(product_key) AS total_products
   from [gold.dim_products]
   group by category
   order by total_products desc

   -- what is average costs in each category?
   SELECT
   category,
   avg(cost) AS avg_costs
   from [gold.dim_products]
   group by category
   order by avg_costs desc

   -- What is the total revenue generated for each category
   SELECT 
   p.category,
   sum(f.sales_amount) as total_revenue
   from [gold.fact_sales] f
   left join [gold.dim_products] p
   on p.product_key = f.product_key
   group by p.category
   order by total_revenue desc

   -- What is the total revenue generated by each customer
   SELECT
   c.customer_key,
   c.first_name,
   c.last_name,
   sum(f.sales_amount) as total_revenue
   from [gold.fact_sales] f
   left join [gold.dim_customers] c
   on c.customer_key = f.customer_key
   group by
   c.customer_key,
   c.first_name,
   c.last_name
   order by total_revenue desc

   -- what is the distribution of sold items across countries?
   SELECT
   c.country,
   sum(f.quantity) as total_sold_items
   from [gold.fact_sales] f
   left join [gold.dim_customers] c
   on c.customer_key = f.customer_key
   group by
   c.country
   order by total_sold_items desc


   -- which 5 products generate the highest revenue?
   SELECT top 5
   p.product_name,
   sum(f.sales_amount) as total_revenue
   from [gold.fact_sales] f
   left join [gold.dim_products] p
   on p.product_key = f.product_key
   group by p.product_name
   order by total_revenue desc

   -- what are the 5 worst-performing products in terms of sales?
   SELECT top 5
   p.product_name,
   sum(f.sales_amount) as total_revenue
   from [gold.fact_sales] f
   left join [gold.dim_products] p
   on p.product_key = f.product_key
   group by p.product_name
   order by total_revenue ASC

   -- which 5 SUBCATEGORY generate the highest revenue?
   SELECT top 5
   s.subcategory,
   sum(f.sales_amount) as total_revenue
   from [gold.fact_sales] f
   left join [gold.dim_products] s
   on s.product_key = f.product_key
   group by s.subcategory
   order by total_revenue desc

   -- what are the 5 worst-performing subcategory in terms of sales?
   SELECT top 5
   s.subcategory,
   sum(f.sales_amount) as total_revenue
   from [gold.fact_sales] f
   left join [gold.dim_products] s
   on s.product_key = f.product_key
   group by s.subcategory
   order by total_revenue ASC

  

   